/* Unisoxx Data Exploration

Skills used: Joins, Aggregate Functions, Case Statements, Alias Operators

*/

--- Master Table:

SELECT *
FROM `unisoxx.Billing.2021-January-June` AS a 
JOIN  `unisoxx.Inventory.Inventory` AS b 
ON a.item_id=b.item_id
JOIN `unisoxx.Customer_Information.customer_information` AS c
ON a.customer_id=c.customer_id;

--- Age Range:

SELECT Min(Age) AS Youngest_Customer, MAX(Age) AS Oldest_Customer
FROM `unisoxx.Customer_Information.customer_information`;

---- Customer Transaction with Total Price:

SELECT customer_id, transaction_id, (quantity*price) AS total_price
FROM `unisoxx.Billing.2021-January-June`
ORDER BY transaction_id ;

--- Customers per City by Country:

SELECT Country, City, COUNT (DISTINCT customer_id) AS Number_of_Customers
FROM `unisoxx.Customer_Information.customer_information` 
GROUP BY Country, City;

--- Customers per City:

SELECT DISTINCT City, COUNT(customer_id) AS Number_of_Customers
FROM `unisoxx.Customer_Information.customer_information` 
GROUP BY City
ORDER BY Number_of_Customers DESC;

--- Customers per Country:

SELECT Country, COUNT(customer_id) AS Number_of_Customers
FROM `unisoxx.Customer_Information.customer_information` 
GROUP BY Country
ORDER BY Number_of_Customers DESC;

--- Generation by customer_id:

SELECT Country, customer_id, Age, 
CASE WHEN Age BETWEEN 16 AND 26 THEN 'Gen_Z'
WHEN Age BETWEEN 27 AND 42 THEN 'Millenial'
WHEN Age BETWEEN 43 AND 58 THEN 'Gen_X'
WHEN Age BETWEEN 59 AND 77 THEN 'Boomer'
ELSE 'uncategorized'
END AS Generation
FROM `unisoxx.Customer_Information.customer_information`; 

--- Product Name with Quarter and Quantity:

SELECT b.Category, b.Product_Name, b.Color, b.Size, a.quantity, a.price, (a.quantity * a.price) AS total_price,
CASE WHEN transaction_date BETWEEN '2021-01-01' AND '2021-03-31' THEN 'Q1'
WHEN transaction_date BETWEEN '2021-04-01' AND '2021-06-30' THEN 'Q2'
ELSE 'NoDate'
END AS quarter
FROM `unisoxx.Billing.2021-January-June` AS a
JOIN `unisoxx.Inventory.Inventory` AS b
ON a.item_id=b.item_id
ORDER BY quarter;

--- Repeat Customers:

SELECT  customer_id, COUNT(transaction_id) AS Transactions,SUM(quantity * price) AS Revenue
FROM `unisoxx.Billing.2021-January-June`
GROUP BY customer_id
HAVING COUNT(transaction_id)>1
ORDER BY Transactions DESC;

--- Repeat Customers with Generations:

SELECT  a.customer_id, b.Generation, a.Transactions, a.Revenue
FROM `unisoxx.Sales.Repeat Customers` AS a
JOIN `unisoxx.Customer_Information.Generations` AS b
ON a.customer_id=b.customer_id
ORDER BY a.Transactions DESC;

--- Customers with a Single Transaction:

SELECT  a.customer_id, b.Generation, COUNT(transaction_id) AS Transactions,SUM(quantity * price) AS Revenue
FROM `unisoxx.Billing.2021-January-June` AS a
JOIN `unisoxx.Customer_Information.Generations` AS b
ON a.customer_id=b.customer_id
GROUP BY a.customer_id,b.Generation
HAVING COUNT(transaction_id)=1
ORDER BY Transactions DESC;

--- Sales by Generation:

SELECT b.quarter, a.Generation, a.Country, b.total_price AS Revenue
FROM `unisoxx.Customer_Information.Generations` AS a
JOIN  `unisoxx.Billing.Total_Price_Quarter` AS b
ON a.customer_id=b.customer_id
ORDER BY b.quarter;

--- Sales with Product Details:

SELECT  a.quarter, b.Category, b.Product_Name, b.Color, b.Size, a.total_price
FROM `unisoxx.Billing.Total_Price_Quarter` AS a
INNER JOIN `unisoxx.Inventory.Inventory` AS b
ON a.item_id=b.item_id

--- Total Price by Quarter:

SELECT customer_id, transaction_id, transaction_date, item_id, (quantity * price) AS total_price,
CASE WHEN transaction_date BETWEEN '2021-01-01' AND '2021-03-31' THEN 'Q1'
WHEN transaction_date BETWEEN '2021-04-01' AND '2021-06-30' THEN 'Q2'
ELSE 'NoDate'
END AS quarter
FROM `unisoxx.Billing.2021-January-June`
ORDER BY quarter;

--- Q2 Transactions in Turkey with Product name:

SELECT a.transaction_id, a.transaction_date, a.Country, b.Product_Name, a.quantity, a.price
FROM `unisoxx.Sales.Q2 Turkey Transactions` AS a
JOIN `unisoxx.Inventory.Inventory` AS b
ON a.item_id=b.item_id
ORDER BY a.transaction_date;

--- Transactions in Turkey:

SELECT  a.transaction_id, a.transaction_date, b.Country, a.item_id, a.quantity, a.price
FROM `unisoxx.Billing.2021-January-June` AS a
JOIN `unisoxx.Customer_Information.customer_information` AS b
ON a.customer_id=b.customer_id
WHERE b.Country="Turkey"
ORDER BY a.transaction_date;

--- Add to Cart Ratio:

SELECT  page_name, SUM(checkouts)/SUM(add_to_carts)*100 AS Add_To_Cart_Ratio
FROM `unisoxx.Campaign.analytics`
WHERE page_name='/basic-cotton-sock' 
OR page_name='/low-cotton-sock'
OR page_name='/cable-wool-sock'
OR page_name='/ribbed-wool-sock'
GROUP BY page_name;

--- Product View Ratio:

SELECT  page_name, SUM(add_to_carts)/SUM(product_views)*100 AS Product_view_ratio
FROM `unisoxx.Campaign.analytics`
WHERE page_name='/basic-cotton-sock' 
OR page_name='/low-cotton-sock'
OR page_name='/cable-wool-sock'
OR page_name='/ribbed-wool-sock'
GROUP BY page_name;

--- Checkout Ratio:

SELECT a.page_name, a.transactions, b.checkouts, a.transactions / b.checkouts *100 AS Checkout_Ratio
FROM `unisoxx.Campaign.Transactions` AS a
JOIN `unisoxx.Campaign.Checkouts` AS b
ON a.page_name=b.page_name
GROUP BY page_name, transactions, checkouts;
